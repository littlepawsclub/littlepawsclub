// Small Paws Club - SCSS Mixins
// Reusable mixins for consistent styling

// Breakpoints
@mixin breakpoint($size) {
  @if $size == sm {
    @media (min-width: $breakpoint-sm) {
      @content;
    }
  } @else if $size == md {
    @media (min-width: $breakpoint-md) {
      @content;
    }
  } @else if $size == lg {
    @media (min-width: $breakpoint-lg) {
      @content;
    }
  } @else if $size == xl {
    @media (min-width: $breakpoint-xl) {
      @content;
    }
  }
}

// Button Base
@mixin button-base {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  gap: $spacing-2;
  padding: $spacing-3 $spacing-6;
  border: none;
  border-radius: $border-radius;
  font-family: $font-family-primary;
  font-weight: $font-weight-semibold;
  text-decoration: none;
  cursor: pointer;
  transition: all $transition-base;
  white-space: nowrap;
  
  &:focus {
    outline: 2px solid $accent;
    outline-offset: 2px;
  }
  
  &:disabled {
    opacity: 0.5;
    cursor: not-allowed;
  }
}

// Button Primary
@mixin button-primary {
  @include button-base;
  background: $accent;
  color: white;
  
  &:hover:not(:disabled) {
    background: darken($accent, 10%);
    transform: translateY(-1px);
    box-shadow: $shadow-md;
  }
  
  &:active {
    transform: translateY(0);
  }
}

// Button Secondary
@mixin button-secondary {
  @include button-base;
  background: transparent;
  color: $text-primary;
  border: 2px solid $border-light;
  
  &:hover:not(:disabled) {
    background: $background-light;
    border-color: $sage;
  }
}

// Card Base
@mixin card-base {
  background: white;
  border-radius: $border-radius;
  box-shadow: $shadow;
  overflow: hidden;
  transition: all $transition-base;
  
  &:hover {
    box-shadow: $shadow-lg;
    transform: translateY(-2px);
  }
}

// Focus Styles
@mixin focus-ring {
  outline: 2px solid $accent;
  outline-offset: 2px;
}

// Visually Hidden
@mixin visually-hidden {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border: 0;
}

// Container
@mixin container {
  max-width: $container-max-width;
  margin: 0 auto;
  padding: 0 $spacing-4;
  
  @include breakpoint(md) {
    padding: 0 $spacing-6;
  }
}

// Flex Center
@mixin flex-center {
  display: flex;
  align-items: center;
  justify-content: center;
}

// Grid Auto-fit
@mixin grid-auto-fit($min-width: 250px) {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax($min-width, 1fr));
  gap: $spacing-6;
}

// Aspect Ratio
@mixin aspect-ratio($width, $height) {
  position: relative;
  
  &::before {
    content: '';
    display: block;
    width: 100%;
    padding-top: percentage($height / $width);
  }
  
  > * {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
  }
}

// Truncate Text
@mixin truncate {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

// Line Clamp
@mixin line-clamp($lines) {
  display: -webkit-box;
  -webkit-line-clamp: $lines;
  -webkit-box-orient: vertical;
  overflow: hidden;
}
